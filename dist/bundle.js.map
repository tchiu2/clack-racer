{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/game.js","webpack:///./src/game_view.js","webpack:///./src/index.js","webpack:///./src/keyboard.js","webpack:///./src/passages.js","webpack:///./src/results.js","webpack:///./src/util.js"],"names":["Game","startTime","Date","passage","userInput","remainingPassage","currentFragment","keystrokes","finishTime","results","e","target","value","concat","slice","length","updateUserInput","document","getElementById","randomPassage","calculateResults","totalTime","calculateElapsedTime","wpm","calculateWPM","time","accuracy","calculateAccuracy","DIM_X","DIM_Y","GameView","game","ctx","main","lastElementChild","innerHTML","keyboardShown","keyboardHTML","console","log","receiveUserInput","displayPassageLetters","isFinished","completeRace","action","code","preventDefault","key","querySelector","classList","timer","setInterval","clearInterval","disabled","focus","startRace","reset","bindInputListeners","getPassage","startBtn","beginCountdown","container","toggleKeyboardShow","addEventListener","start","toggleKeyboardDisplay","completed","Array","from","c","join","remaining","i","firstChild","removeChild","inputEventHandler","handleKey","showResults","canvas","width","height","getContext","fillStyle","fillRect","PASSAGES","randIndex","Math","floor","random","formatTime","end","ceil","parseFloat","toFixed","seconds","minutes"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;;IAMMA,I;;;AACJ,kBAAc;AAAA;;AAAA;;AAAA,uCAqCF,YAAM;AAChB,WAAI,CAACC,SAAL,GAAiB,IAAIC,IAAJ,EAAjB;AACD,KAvCa;;AACZ,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKN,SAAL,GAAiB,EAAjB;AACA,SAAKO,UAAL,GAAkB,EAAlB;AACA,SAAKC,OAAL,GAAe,EAAf;AACD;;;;qCAEgBC,C,EAAG;AAClB,WAAKH,UAAL;AACA,WAAKD,eAAL,GAAuBI,CAAC,CAACC,MAAF,CAASC,KAAhC;AACA,WAAKR,SAAL,CAAeS,MAAf,CAAsB,KAAKP,eAA3B,MAAgD,KAAKH,OAAL,CAAaW,KAAb,CAAmB,CAAnB,EAAsB,KAAKV,SAAL,CAAeW,MAAf,GAAwB,KAAKT,eAAL,CAAqBS,MAAnE,CAAhD,IAA8H,KAAKC,eAAL,EAA9H;AACD;;;sCAEiB;AAChB;AACE,WAAKZ,SAAL,IAAkB,KAAKE,eAAvB;AACA,WAAKD,gBAAL,GAAwB,KAAKF,OAAL,CAAaW,KAAb,CAAmB,KAAKV,SAAL,CAAeW,MAAlC,CAAxB;AACAE,cAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCN,KAAtC,GAA8C,EAA9C,CAJc,CAKhB;AACD;;;+BAEUT,O,EAAS;AAClB,WAAKA,OAAL,GAAeA,OAAO,IAAIgB,+DAAa,EAAvC;AACA,WAAKd,gBAAL,GAAwB,KAAKF,OAA7B;AACD;;;4BAEO;AACN,WAAKC,SAAL,GAAiB,EAAjB;AACA,WAAKG,UAAL,GAAkB,CAAlB;AACA,WAAKN,SAAL,GAAiB,EAAjB;AACA,WAAKO,UAAL,GAAkB,EAAlB;AACD;;;kCAMa;AACZ,WAAKL,OAAL,KAAiB,KAAKC,SAAtB,IAAmC,KAAKgB,gBAAL,EAAnC;AACD;;;uCAEkB;AACjB,WAAKZ,UAAL,GAAkB,IAAIN,IAAJ,EAAlB;AACA,UAAMmB,SAAS,GAAGC,kEAAoB,CAAC,KAAKrB,SAAN,EAAiB,KAAKO,UAAtB,CAAtC,CAFiB,CAGjB;AACA;AACA;;AACA,WAAKC,OAAL,GAAe;AACbc,WAAG,EAAEC,0DAAY,CAACH,SAAD,EAAY,KAAKlB,OAAjB,CADJ;AAEbsB,YAAI,EAAEJ,SAFO;AAGbK,gBAAQ,EAAEC,+DAAiB,CAAC,KAAKpB,UAAN,EAAkB,KAAKJ,OAAvB;AAHd,OAAf;AAKD;;;iCAEY;AACX,aAAO,KAAKA,OAAL,KAAiB,KAAKC,SAA7B;AACD;;;;;;AAGHJ,IAAI,CAAC4B,KAAL,GAAa,GAAb;AACA5B,IAAI,CAAC6B,KAAL,GAAa,GAAb;AAEe7B,mEAAf,E;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;;IAEM8B,Q;;;AACJ,oBAAYC,IAAZ,EAAkBC,GAAlB,EAAuB;AAAA;;AAAA;;AAAA,mDAiCC,UAAAtB,CAAC,EAAI;AAC3B,UAAMuB,IAAI,GAAGhB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;AACAe,UAAI,CAACC,gBAAL,CAAsBC,SAAtB,GAAmC,KAAI,CAACC,aAAL,GAAqB,EAArB,GAA0BC,sDAA7D;AACA,WAAI,CAACD,aAAL,GAAqB,CAAC,KAAI,CAACA,aAA3B;AACAE,aAAO,CAACC,GAAR,CAAY,KAAI,CAACH,aAAjB;AACD,KAtCsB;;AAAA,+CA+CH,UAAA1B,CAAC,EAAI;AACvB,WAAI,CAACqB,IAAL,CAAUS,gBAAV,CAA2B9B,CAA3B;;AACA,WAAI,CAACN,SAAL,CAAeQ,KAAf,GAAuB,EAAvB;;AACA,WAAI,CAAC6B,qBAAL;;AACA,WAAI,CAACV,IAAL,CAAUW,UAAV,MAA0B,KAAI,CAACC,YAAL,EAA1B;AACD,KApDsB;;AAAA,uCAsDX,UAAAC,MAAM;AAAA,aAAI,UAAAlC,CAAC,EAAI;AACzBA,SAAC,CAACmC,IAAF,KAAW,KAAX,IAAoBnC,CAAC,CAACoC,cAAF,EAApB;AACA,YAAMC,GAAG,GAAG9B,QAAQ,CAAC+B,aAAT,kCAAiDtC,CAAC,CAACmC,IAAnD,OAAZ;AACAE,WAAG,IAAIA,GAAG,CAACE,SAAJ,CAAcL,MAAd,EAAsB,SAAtB,CAAP;AACD,OAJiB;AAAA,KAtDK;;AAAA,4CAkEN,UAAAnB,IAAI,EAAI;AACvB,UAAMyB,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC9Bb,eAAO,CAACC,GAAR,CAAYd,IAAZ;AACAA,YAAI;;AACJ,YAAIA,IAAI,IAAI,CAAZ,EAAe;AACb2B,uBAAa,CAACF,KAAD,CAAb;AACA,eAAI,CAAC9C,SAAL,CAAeiD,QAAf,GAA0B,KAA1B;;AACA,eAAI,CAACjD,SAAL,CAAekD,KAAf;;AACA,eAAI,CAACvB,IAAL,CAAUwB,SAAV;;AACAjB,iBAAO,CAACC,GAAR,CAAY,IAAZ;AACD;AACF,OAVwB,EAUtB,IAVsB,CAAzB;AAWD,KA9EsB;;AAAA,mCAgFf,UAAA7B,CAAC,EAAI;AACXA,OAAC,CAACoC,cAAF;;AACA,WAAI,CAACU,KAAL;;AACA,WAAI,CAACC,kBAAL;;AACA,WAAI,CAAC1B,IAAL,CAAU2B,UAAV;;AACA,WAAI,CAACjB,qBAAL;;AACA,WAAI,CAACkB,QAAL,CAAcN,QAAd,GAAyB,IAAzB;;AACA,WAAI,CAACO,cAAL,CAAoB,CAApB;AACD,KAxFsB;;AACrB,SAAK5B,GAAL,GAAWA,GAAX;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKK,aAAL,GAAqB,KAArB;AAEA,SAAKyB,SAAL,GAAiB5C,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAjB;AACA,SAAKd,SAAL,GAAiBa,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAjB;AACA,SAAKyC,QAAL,GAAgB1C,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAhB;AACA,SAAK4C,kBAAL,GAA0B7C,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAA1B;AAEA,SAAKyC,QAAL,CAAcI,gBAAd,CAA+B,OAA/B,EAAwC,KAAKC,KAA7C;AACA,SAAKF,kBAAL,CAAwBC,gBAAxB,CAAyC,OAAzC,EAAkD,KAAKE,qBAAvD;AACA,SAAKJ,SAAL,CAAeE,gBAAf,CAAgC,OAAhC,EAAyC;AAAA,aAAM,KAAI,CAAC3D,SAAL,CAAekD,KAAf,EAAN;AAAA,KAAzC;AACA,SAAKlD,SAAL,CAAeiD,QAAf,GAA0B,IAA1B;AACD;;;;qCAEgB;AACf,WAAKQ,SAAL,CAAe1B,SAAf,8DAEM,KAAKJ,IAAL,CAAU3B,SAFhB,6EAKM,KAAK2B,IAAL,CAAU1B,gBALhB;AAQD;;;4CAEuB;AACtB,UAAM6D,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAKrC,IAAL,CAAU3B,SAArB,EAAgC,UAAAiE,CAAC;AAAA,0DAAsCA,CAAtC;AAAA,OAAjC,EAAmFC,IAAnF,CAAwF,EAAxF,CAAlB;AACA,UAAMC,SAAS,GAAGJ,KAAK,CAACC,IAAN,CAAW,KAAKrC,IAAL,CAAU1B,gBAArB,EAAuC,UAACgE,CAAD,EAAIG,CAAJ;AAAA,wDAA2CA,CAAC,KAAK,CAAN,GAAU,QAAV,GAAqB,EAAhE,gBAAuEH,CAAvE;AAAA,OAAvC,EAA0HC,IAA1H,CAA+H,EAA/H,CAAlB;AACA,WAAKT,SAAL,CAAe1B,SAAf,aAA8B+B,SAA9B,SAA0CK,SAA1C;AACD;;;4BASO;AACN,aAAO,KAAKV,SAAL,CAAeY,UAAtB,EAAkC;AAChC,aAAKZ,SAAL,CAAea,WAAf,CAA2B,KAAKb,SAAL,CAAeY,UAA1C;AACD;;AACD,WAAK1C,IAAL,CAAUyB,KAAV;AACD;;;yCAeoB;AACnB,WAAKpD,SAAL,CAAe2D,gBAAf,CAAgC,OAAhC,EAAyC,KAAKY,iBAA9C;AACA,WAAKvE,SAAL,CAAe2D,gBAAf,CAAgC,SAAhC,EAA2C,KAAKa,SAAL,CAAe,KAAf,CAA3C;AACA,WAAKxE,SAAL,CAAe2D,gBAAf,CAAgC,OAAhC,EAAyC,KAAKa,SAAL,CAAe,QAAf,CAAzC;AACD;;;mCA0Bc;AACb,WAAK7C,IAAL,CAAUX,gBAAV;AACA,WAAKhB,SAAL,CAAeiD,QAAf,GAA0B,IAA1B;AACA,WAAKM,QAAL,CAAcN,QAAd,GAAyB,KAAzB;AACAwB,kEAAW,CAAC,KAAK9C,IAAL,CAAUtB,OAAX,EAAoB,KAAKoD,SAAzB,CAAX;AACD;;;;;;AAGY/B,uEAAf,E;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AACA;AAEAb,QAAQ,CAAC8C,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,MAAMe,MAAM,GAAG7D,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA4D,QAAM,CAACC,KAAP,GAAe/E,6CAAI,CAAC4B,KAApB;AACAkD,QAAM,CAACE,MAAP,GAAgBhF,6CAAI,CAAC6B,KAArB;AAEA,MAAMG,GAAG,GAAG8C,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACAjD,KAAG,CAACkD,SAAJ,GAAgB,WAAhB;AACAlD,KAAG,CAACmD,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBL,MAAM,CAACC,KAA1B,EAAiCD,MAAM,CAACE,MAAxC;AAEA,MAAMjD,IAAI,GAAG,IAAI/B,6CAAJ,EAAb;AACA,MAAI8B,kDAAJ,CAAaC,IAAb,EAAmBC,GAAnB;AACD,CAXD,E;;;;;;;;;;;;ACHA;AAAA;AAAO,IAAMK,YAAY,01hBAAlB,C;;;;;;;;;;;;ACAP;AAAA;AAAA,IAAM+C,QAAQ,GAAG,CACf,+aADe,EAEf,uNAFe,EAGf,0eAHe,4hBAMf,8CANe,CAAjB;AASO,IAAMjE,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,MAAMkE,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBJ,QAAQ,CAACrE,MAArC,CAAlB;AACA,SAAOqE,QAAQ,CAACC,SAAD,CAAf;AACD,CAHM,C;;;;;;;;;;;;ACTP;AAAA;AAAA;AAAA;AAEO,IAAMR,WAAW,GAAG,SAAdA,WAAc,CAACpE,OAAD,EAAUoD,SAAV,EAAwB;AAAA,MACzCtC,GADyC,GACjBd,OADiB,CACzCc,GADyC;AAAA,MACpCE,IADoC,GACjBhB,OADiB,CACpCgB,IADoC;AAAA,MAC9BC,QAD8B,GACjBjB,OADiB,CAC9BiB,QAD8B;AAEjDmC,WAAS,CAAC1B,SAAV,wEAE+BZ,GAF/B,sDAGyBkE,wDAAU,CAAChE,IAAD,CAHnC,0DAI6BC,QAJ7B;AAOD,CATM,C;;;;;;;;;;;;ACFP;AAAA;AAAA;AAAA;AAAA;AAAO,IAAMJ,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAC0C,KAAD,EAAQ0B,GAAR,EAAgB;AAClD,SAAOJ,IAAI,CAACK,IAAL,CAAU,CAACD,GAAG,GAAG1B,KAAP,IAAgB,IAA1B,CAAP;AACD,CAFM;AAIA,IAAMxC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOtB,OAAP,EAAmB;AAC7C,SAAOmF,IAAI,CAACK,IAAL,CAAWxF,OAAO,CAACY,MAAR,GAAiB,CAAlB,IAAwBU,IAAI,GAAG,EAA/B,CAAV,CAAP;AACD,CAFM;AAIA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACpB,UAAD,EAAaJ,OAAb,EAAyB;AACxD,MAAMY,MAAM,GAAGZ,OAAO,CAACY,MAAvB;AACA,SAAO,MAAO6E,UAAU,CAAE,CAACrF,UAAU,GAAGQ,MAAd,IAAwB,IAAzB,GAAiCA,MAAlC,CAAV,CAAoD8E,OAApD,CAA4D,CAA5D,CAAD,GAAmE,GAAhF;AACD,CAHM;AAKA,IAAMJ,UAAU,GAAG,SAAbA,UAAa,CAAAK,OAAO,EAAI;AACnC,MAAIC,OAAO,GAAG,CAAd;;AACA,MAAID,OAAO,GAAG,EAAd,EAAkB;AAChBC,WAAO,GAAGT,IAAI,CAACC,KAAL,CAAWO,OAAO,GAAG,EAArB,CAAV;AACAA,WAAO,GAAGA,OAAO,GAAG,EAApB;AACD;;AACD,mBAAUC,OAAV,cAAqBD,OAAO,GAAG,EAAV,cAAmBA,OAAnB,IAA+BA,OAApD;AACD,CAPM,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import { randomPassage } from './passages';\nimport {\n  calculateElapsedTime,\n  calculateWPM,\n  calculateAccuracy,\n} from './util';\n\nclass Game {\n  constructor() {\n    this.passage = \"\";\n    this.userInput = \"\";\n    this.remainingPassage = \"\";\n    this.currentFragment = \"\";\n    this.keystrokes = 0;\n    this.startTime = \"\";\n    this.finishTime = \"\";\n    this.results = {};\n  }\n\n  receiveUserInput(e) {\n    this.keystrokes++;\n    this.currentFragment = e.target.value;\n    this.userInput.concat(this.currentFragment) === this.passage.slice(0, this.userInput.length + this.currentFragment.length) && this.updateUserInput();\n  }\n\n  updateUserInput() {\n    //if (this.currentFragment[this.currentFragment.length - 1] === \" \" || this.userInput.length + this.currentFragment.length === this.passage.length) {\n      this.userInput += this.currentFragment;\n      this.remainingPassage = this.passage.slice(this.userInput.length);\n      document.getElementById(\"user-input\").value = \"\";\n    //}\n  }\n\n  getPassage(passage) {\n    this.passage = passage || randomPassage(); \n    this.remainingPassage = this.passage;\n  }\n\n  reset() {\n    this.userInput = \"\";\n    this.keystrokes = 0;\n    this.startTime = \"\";\n    this.finishTime = \"\";\n  }\n\n  startRace = () => {\n    this.startTime = new Date();\n  }\n\n  checkStatus() {\n    this.passage === this.userInput && this.calculateResults();\n  }\n\n  calculateResults() {\n    this.finishTime = new Date(); \n    const totalTime = calculateElapsedTime(this.startTime, this.finishTime);\n    //console.log(`Your WPM is ${calculateWPM(totalTime, this.passage)}`);\n    //console.log(`Elapsed time: ${totalTime}s`);\n    //console.log(`Accuracy: ${calculateAccuracy(this.keystrokes, this.passage)}%`);\n    this.results = {\n      wpm: calculateWPM(totalTime, this.passage),\n      time: totalTime,\n      accuracy: calculateAccuracy(this.keystrokes, this.passage),\n    };\n  }\n\n  isFinished() {\n    return this.passage === this.userInput;\n  }\n}\n\nGame.DIM_X = 500;\nGame.DIM_Y = 150;\n\nexport default Game;\n","import { showResults } from './results';\nimport { keyboardHTML } from './keyboard'; \n\nclass GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.keyboardShown = false;\n\n    this.container = document.getElementById('passage-container');\n    this.userInput = document.getElementById('user-input');\n    this.startBtn = document.getElementById('start');\n    this.toggleKeyboardShow = document.getElementById('keyboard-toggle');\n\n    this.startBtn.addEventListener('click', this.start);\n    this.toggleKeyboardShow.addEventListener('click', this.toggleKeyboardDisplay);\n    this.container.addEventListener('click', () => this.userInput.focus());\n    this.userInput.disabled = true;\n  }\n\n  displayPassage() {\n    this.container.innerHTML = `\n      <span id=\"completed-passage\">\n        ${this.game.userInput}\n      </span>\n      <span id=\"remaining-passage\">\n        ${this.game.remainingPassage}\n      </span>\n    `\n  }\n\n  displayPassageLetters() {\n    const completed = Array.from(this.game.userInput, c => `<span class=\"letter completed\">${c}</span>`).join('');\n    const remaining = Array.from(this.game.remainingPassage, (c, i) => `<span class=\"letter remaining ${i === 0 ? \"cursor\" : \"\"}\">${c}</span>`).join('');\n    this.container.innerHTML = `${completed}${remaining}`;\n  }\n\n  toggleKeyboardDisplay = e => {\n    const main = document.getElementById('main') \n    main.lastElementChild.innerHTML = (this.keyboardShown ? \"\" : keyboardHTML);\n    this.keyboardShown = !this.keyboardShown;\n    console.log(this.keyboardShown);\n  }\n\n  reset() {\n    while (this.container.firstChild) {\n      this.container.removeChild(this.container.firstChild);\n    }\n    this.game.reset();\n  }\n\n  inputEventHandler = e => {\n    this.game.receiveUserInput(e);\n    this.userInput.value = \"\";\n    this.displayPassageLetters();\n    this.game.isFinished() && this.completeRace();\n  };\n\n  handleKey = action => e => {\n    e.code === 'Tab' && e.preventDefault();\n    const key = document.querySelector(`.keyboard-key[data-key=${e.code}]`)\n    key && key.classList[action]('pressed');\n  };\n\n  bindInputListeners() {\n    this.userInput.addEventListener('input', this.inputEventHandler);\n    this.userInput.addEventListener('keydown', this.handleKey('add'));\n    this.userInput.addEventListener('keyup', this.handleKey('remove'));\n  }\n\n  beginCountdown = time => {\n    const timer = setInterval(() => {\n      console.log(time);\n      time--;\n      if (time <= 0) {\n        clearInterval(timer);\n        this.userInput.disabled = false;\n        this.userInput.focus();\n        this.game.startRace();\n        console.log(\"GO\");\n      }\n    }, 1000);\n  }\n\n  start = e => {\n    e.preventDefault();\n    this.reset();\n    this.bindInputListeners();\n    this.game.getPassage();\n    this.displayPassageLetters();\n    this.startBtn.disabled = true;\n    this.beginCountdown(3);\n  }\n\n  completeRace() {\n    this.game.calculateResults();\n    this.userInput.disabled = true;\n    this.startBtn.disabled = false;\n    showResults(this.game.results, this.container); \n  }\n}\n\nexport default GameView;\n","import Game from './game';\nimport GameView from './game_view';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n  canvas.width = Game.DIM_X;\n  canvas.height = Game.DIM_Y;\n\n  const ctx = canvas.getContext(\"2d\");\n  ctx.fillStyle = 'lightgrey';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  const game = new Game();\n  new GameView(game, ctx);\n});\n","export const keyboardHTML = `\n      <div class=\"keyboard-container\">\n        <svg class=\"keyboard\" viewBox=\"0 0 678 256\">\n          <svg class=\"keyboard-layout\" x=\"26\" y=\"26\">\n            <svg class=\"keyboard-key\" data-key=\"Backquote\" x=\"0\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">~</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">\\`</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Digit1\" x=\"42\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">!</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">1</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Digit2\" x=\"84\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">@</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">2</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Digit3\" x=\"126\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">#</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">3</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Digit4\" x=\"168\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">$</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">4</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Digit5\" x=\"210\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">%</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">5</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Digit6\" x=\"252\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">^</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">6</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Digit7\" x=\"294\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">&amp;</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">7</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Digit8\" x=\"336\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">*</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">8</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Digit9\" x=\"378\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">(</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">9</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Digit0\" x=\"420\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">)</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">0</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Minus\" x=\"462\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">_</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">-</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Equal\" x=\"504\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">+</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">=</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Backspace\" x=\"546\" y=\"0\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"80\" height=\"40\"></rect> \n              <text class=\"keyboard-key-mod-label\" x=\"8\" y=\"25\">Backspace</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Tab\" x=\"0\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"60\" height=\"40\"></rect> \n              <text class=\"keyboard-key-mod-label\" x=\"18\" y=\"25\">Tab</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyQ\" x=\"62\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">Q</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyW\" x=\"104\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">W</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyE\" x=\"146\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">E</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyR\" x=\"188\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">R</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyT\" x=\"230\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">T</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyY\" x=\"272\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">Y</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyU\" x=\"314\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">U</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyI\" x=\"356\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">I</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyO\" x=\"398\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">O</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyP\" x=\"440\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">P</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"BracketLeft\" x=\"482\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">{</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">[</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"BracketRight\" x=\"524\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"15\">}</text> \n              <text class=\"keyboard-key-multi-label\" x=\"10\" y=\"30\">]</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Backslash\" x=\"566\" y=\"42\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"60\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"15\">|</text> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"30\">\\</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"CapsLock\" x=\"0\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"70\" height=\"40\"></rect> \n              <text class=\"keyboard-key-mod-label\" x=\"6\" y=\"25\">CapsLock</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyA\" x=\"72\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">A</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyS\" x=\"114\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">S</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyD\" x=\"156\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">D</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyF\" x=\"198\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">F</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyG\" x=\"240\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">G</text>\n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyH\" x=\"282\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">H</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyJ\" x=\"324\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">J</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyK\" x=\"366\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">K</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyL\" x=\"408\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">L</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Semicolon\" x=\"450\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"15\">:</text> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"30\">;</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Quote\" x=\"492\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"15\">\"</text> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"30\">'</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Enter\" x=\"534\" y=\"84\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"92\" height=\"40\"></rect> \n              <text class=\"keyboard-key-mod-label\" x=\"30\" y=\"25\">Enter</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"ShiftLeft\" x=\"0\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"84\" height=\"40\"></rect> \n              <text class=\"keyboard-key-mod-label\" x=\"25\" y=\"25\">Shift</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyZ\" x=\"86\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">Z</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyX\" x=\"128\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">X</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyC\" x=\"170\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">C</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyV\" x=\"212\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">V</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyB\" x=\"254\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">B</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyN\" x=\"296\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">N</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"KeyM\" x=\"338\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-single-label\" x=\"15\" y=\"25\">M</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Comma\" x=\"380\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"15\">&lt;</text> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"30\">,</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Period\" x=\"422\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"15\">&gt;</text> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"30\">.</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Slash\" x=\"464\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"40\" height=\"40\"></rect> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"15\">?</text> \n              <text class=\"keyboard-key-multi-label\" x=\"15\" y=\"30\">/</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"ShiftRight\" x=\"506\" y=\"126\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"120\" height=\"40\"></rect> \n              <text class=\"keyboard-key-mod-label\" x=\"40\" y=\"25\">Shift</text> \n            </svg>\n            <svg class=\"keyboard-key\" data-key=\"Space\" x=\"156\" y=\"168\">\n              <rect class=\"keyboard-button\" x=\"0\" y=\"0\" width=\"242\" height=\"40\"></rect> \n            </svg>\n          </svg>\n        </svg>\n      </div>\n  `\n","const PASSAGES = [\n  \"From this point on, we will be using the command line and pry to test our code, navigate our computer, and perform many other amazing tasks. This means that we are not using repl.it anymore to test our code. Getting comfortable with these tools early will be very important in becoming an efficient developer. After learning them, these tools will make just about any operation you can think of faster than using a GUI and mouse.\",\n  \"Provided for you here are some Sudoku puzzles in .txt format. Download these to a folder on your computer. In the same folder, we're going to write a Ruby program to read in the puzzle files and let us solve them!\",\n  \"The path of the righteous man is beset on all sides by the inequities of the selfish and the tyranny of evil men. Blessed is he who, in the name of charity and good will, shepherds the weak through the valley of darkness, for he is truly his brother's keeper and the finder of lost children. And I will strike down upon thee with great vengeance and furious anger those who attempt to poison and destroy my brothers. And you will know my name is the Lord when I lay my vengeance upon you.\",\n  `I really don't understand the whole mechanical keyboard fad. I imagine these people who obsess over these and talk down about \"browns vs red\" to be like the wine snobs of the PC world. Anyone care to explain why a mechanical keyboard offers any real benefit other than \"it makes clicky noises.\"`,\n  `Oh noes, the clever TAs at App Academy made this \"super useful\" library, but it keeps throwing ugly error messages that are hard to understand. Let's revamp the library to throw more descriptive errors and prevent incorrect usage.`,\n  \"The quick brown fox jumps over the lazy dog.\"\n];\n\nexport const randomPassage = () => {\n  const randIndex = Math.floor(Math.random() * (PASSAGES.length));\n  return PASSAGES[randIndex];\n};\n","import { formatTime } from './util';\n\nexport const showResults = (results, container) => {\n  const { wpm, time, accuracy } = results;\n  container.innerHTML = `\n    <div id=\"results\">\n      <div>Your WPM is <strong>${wpm}<strong></div>\n      <div>Time: <strong>${formatTime(time)}<strong></div>\n      <div>Accuracy: <strong>${accuracy}%<strong></div>\n    </div>\n  `\n};\n","export const calculateElapsedTime = (start, end) => {\n  return Math.ceil((end - start) / 1000);\n};\n\nexport const calculateWPM = (time, passage) => {\n  return Math.ceil((passage.length / 5) / (time / 60));\n};\n\nexport const calculateAccuracy = (keystrokes, passage) => {\n  const length = passage.length;\n  return 100 - (parseFloat(((keystrokes - length) * 0.75) / length).toFixed(3)) * 100;\n};\n\nexport const formatTime = seconds => {\n  let minutes = 0;\n  if (seconds > 59) {\n    minutes = Math.floor(seconds / 60);\n    seconds = seconds % 60;\n  }\n  return `${minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\n}\n"],"sourceRoot":""}